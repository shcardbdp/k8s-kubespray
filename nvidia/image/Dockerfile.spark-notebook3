ARG  DEVICE_TYPE=gpu
ARG  BASE_VERSION
FROM shcardbdp/datalab-base-$DEVICE_TYPE:$BASE_VERSION

ARG   VERSION
ARG   DEVICE_TYPE
LABEL version=$VERSION device-type=$DEVICE_TYPE

# ==================================================================
# Important Library Install 
# 1. numpy, pandas
# 2. tensorflow
# 3. pytorch
# ------------------------------------------------------------------
USER $NB_UID    
# Install Jupyter Notebook and Hub
RUN conda install --quiet --yes \
        nomkl==1.0 \
        numpy==1.19.4 \
        pandas==1.1.4 \        
        scikit-learn==0.23.2 \
        scipy==1.5.3 \
        cython==0.29.21 \
    && conda clean -afy && \    
    rm -rf $CONDA_DIR/share/jupyter/lab/staging && \
    rm -rf /home/$NB_USER/.cache/yarn && \
    fix-permissions $CONDA_DIR && \
    fix-permissions /home/$NB_USER \
    && find /opt/conda/ -follow -type f -name '*.a' -delete \
    && find /opt/conda/ -follow -type f -name '*.pyc' -delete \
    && find /opt/conda/ -follow -type f -name '*.js.map' -delete 

RUN conda install --quiet --yes tensorflow-gpu==1.12.0 keras==2.2.4 \
    && conda clean -afy \
    && rm -rf $CONDA_DIR/share/jupyter/lab/staging \
    && rm -rf /home/$NB_USER/.cache/yarn \
    && fix-permissions $CONDA_DIR \
    && fix-permissions /home/$NB_USER \
    && find /opt/conda/ -follow -type f -name '*.a' -delete \
    && find /opt/conda/ -follow -type f -name '*.pyc' -delete \
    && find /opt/conda/ -follow -type f -name '*.js.map' -delete 

RUN pip install --quiet --no-cache-dir torch==1.7.1+cu92 torchvision==0.8.2+cu92 torchaudio==0.7.2 -f https://download.pytorch.org/whl/torch_stable.html \
    && \
    rm -rf /home/$NB_USER/.cache/yarn

RUN conda install --quiet --yes -c lukepfister pycuda==2017.1 scikits.cuda \
    && conda clean -afy \
    && rm -rf $CONDA_DIR/share/jupyter/lab/staging  \
    && rm -rf /home/$NB_USER/.cache/yarn \
    && fix-permissions $CONDA_DIR \
    && fix-permissions /home/$NB_USER \
    && find /opt/conda/ -follow -type f -name '*.a' -delete \
    && find /opt/conda/ -follow -type f -name '*.pyc' -delete \
    && find /opt/conda/ -follow -type f -name '*.js.map' -delete 

# # Install python lib by conda
RUN conda install --quiet --yes \
        pyspark==2.4.4 \
        pyarrow==0.11.1 \
        shap==0.36.0 \
        scikit-plot==0.3.7 \
        pandas-profiling==2.9.0 \
        nltk==3.4.4 \
        implicit==0.4.4 \
        lightfm==1.16 \
        imbalanced-learn==0.7.0 \
        bokeh==2.2.3 \
        beautifulsoup4==4.9.3 \
        autopep8==1.5.4 \
        cx_oracle==8.1.0 \
        feather-format==0.4.1 \
        swig==4.0.2 \
        openmpi==4.0.5 \
        pydotplus==2.0.2 \
        networkx==2.5 \
        hyperopt==0.2.5 \     
        apscheduler==3.6.3 \
        dask==2020.12.0 \           
    && conda clean -afy && \       
    rm -rf $CONDA_DIR/share/jupyter/lab/staging && \
    rm -rf /home/$NB_USER/.cache/yarn && \
    fix-permissions $CONDA_DIR && \
    fix-permissions /home/$NB_USER \
    && find /opt/conda/ -follow -type f -name '*.a' -delete \
    && find /opt/conda/ -follow -type f -name '*.pyc' -delete \
    && find /opt/conda/ -follow -type f -name '*.js.map' -delete \
    && find /opt/conda/lib/python*/site-packages/bokeh/server/static -follow -type f -name '*.js' -delete  
# RUN conda install --quiet --yes \    




#         thrift \
#         thrift_sasl \
#         impyla \     
#         plotly \ 
#         pycrypto \
#         geopandas \
#         fire \
#         watchdog \

#         nodejs \  
#     && conda clean -afy && \    
#     rm -rf $CONDA_DIR/share/jupyter/lab/staging && \
#     rm -rf /home/$NB_USER/.cache/yarn && \
#     fix-permissions $CONDA_DIR && \
#     fix-permissions /home/$NB_USER \
#     && find /opt/conda/ -follow -type f -name '*.a' -delete \
#     && find /opt/conda/ -follow -type f -name '*.pyc' -delete \
#     && find /opt/conda/ -follow -type f -name '*.js.map' -delete \
#     && find /opt/conda/lib/python*/site-packages/bokeh/server/static -follow -type f -name '*.js' -delete  


# RUN pip install --quiet --no-cache-dir --use-feature=2020-resolver \
#         tensorflowonspark==1.4.3 \              
#         tensorboard_logger==0.1.0 \           
#         tensorboard_pytorch==0.7.1 \         
#         tensorboardX==1.8 \                            
#         horovod==0.16.4 \          
#         mecab-python3==0.7 \        
#         tensorflow-hub==0.5.0 \
#         tensorwatch==0.8.5 \
#         torchtext==0.4.0 \
#         # torchaudio==0.3.0 \
#         pyclustering==0.9.2 \
#         efficient_apriori==1.1.0 \
#         cookiecutter==1.7.0 \
#         shap==0.34.0 \   
#         kmodes==0.10.2 \     
#     && \
#     rm -rf /home/$NB_USER/.cache/yarn
# RUN pip install --quiet --no-cache-dir \
#         gensim==3.8.3 \
#         konlpy==0.5.2 \
#         mecab-python3==1.0.3 \        
#     && \
#     rm -rf /home/$NB_USER/.cache/yarn 

# RUN pip install --quiet --no-cache-dir \
#         xgboost==0.90 \
#         eli5==0.10.1 \ 
#         mlxtend==0.17.0 \
#         lightgbm==2.2.3 \        
#         catboost==0.16.4 \        
#         plotnine==0.5.1 \        
#         missingno==0.4.2 \
#         pyLDAvis==2.1.2 \
#         Edward \
#         dfply==0.3.3 \
#         dplython==0.0.7 \
#         schedule==0.6.0 \
#         surprise==0.1 \
#         ipython-memory-usage==1.1 \
#         nbresuse==0.3.2 \   
#         fasttext==0.9.1 \
#         pycm==2.4 \
#         apyori==1.1.1 \
#         pySnooper \
#         thriftpy==0.3.9 \
#         pyodbc==4.0.27 \
#         cufflinks==0.16 \          
#         folium==0.10.0 \
#         openpyxl==2.6.3 \   
#         sacred==0.7.5 \
#         gluonnlp==0.8.1 \
#         chatspace==1.0.1 \
#         tables==3.6.1 \
#     && \
#     rm -rf /home/$NB_USER/.cache/yarn 

# ==================================================================
# Apache Toree kernel
# ------------------------------------------------------------------
RUN pip install --no-cache-dir \
    https://dist.apache.org/repos/dist/release/incubator/toree/0.3.0-incubating/toree-pip/toree-0.3.0.tar.gz \
    && \
    jupyter toree install --sys-prefix && \
    rm -rf /home/$NB_USER/.local && \
    fix-permissions $CONDA_DIR && \
    fix-permissions /home/$NB_USER

# ==================================================================
# Spark Setting
# ------------------------------------------------------------------
COPY spark/conf.cloudera.yarn/ /opt/conf.cloudera.yarn/
COPY spark/hive/hive-site.xml /usr/local/spark/conf/

# volume attach 방식으로 변경 (2019-05-13)
# COPY spark/spark-defaults.conf /usr/local/spark/conf/ 

COPY spark/DbInterface.py /opt/conda/lib/python3.6/
COPY spark/log4j.properties /usr/local/spark/conf/
# Setting env value
ENV HADOOP_CONF_DIR=/opt/conf.cloudera.yarn \
    YARN_CONF_DIR=/opt/conf.cloudera.yarn \
    SPARK_HOME=/usr/local/spark
ENV PATH=$SPARK_HOME/bin:${PATH} \
    SPARK_CONF_DIR=$SPARK_HOME/conf \
    SPARK_YARN_USER_ENV='PYSPARK_PYTHON=/shcsw/anaconda3/bin/python' \
    PYSPARK_DRIVER_PYTHON=/opt/conda/bin/python \
    PYSPARK_PYTHON=/shcsw/anaconda3/bin/python \   
# PATH Setting
    # PATH=/home/$NB_USER/notebooks/data/share/gitlab-runner/shcPython-prd/jdbc:${PATH}
    PATH=/home/$NB_USER/notebooks/src/shcPython/jdbc:${PATH}

RUN echo "export LD_LIBRARY_PATH=$LD_LIBRARY_PATH" >> /home/$NB_USER/.bashrc && \
    echo "export PATH=$PATH" >> /home/$NB_USER/.bashrc && \
    echo "export TMOUT=3600" >> /home/$NB_USER/.bashrc

USER root
WORKDIR /home/$NB_USER
COPY entrypoint_spark.sh /usr/local/bin/

EXPOSE 8888 6006

ENTRYPOINT [ "/usr/bin/tini", "--", "entrypoint_spark.sh"]
CMD [ "/usr/local/bin/run_jupyter.sh", "--no-browser", "--ip=0.0.0.0", "--allow-root", "--NotebookApp.token="]

# Add fonts for NHN fonts
COPY fonts/ /usr/share/fonts/

USER $NB_UID
